/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.engcia;
// package must be defined in packages from kmodule.xml file

//list any import classes here.
import org.engcia.BaseConhecimento.Hypothesis;
import org.engcia.BaseConhecimento.Conclusion;
import org.engcia.BaseConhecimento.Evidences
import java.io.BufferedReader
import java.io.InputStreamReader
import org.engcia.Components.Storage
import org.engcia.Services.Questions
import java.util.List
import org.engcia.Components.RAM
import org.engcia.Components.RAMType;


//declare any global variables here

query "Conclusions"
	$conclusion : Conclusion()
end

rule "r1"
	when
		Evidences(  300 < maxBudget < 600 )
	then
		Hypothesis h = new Hypothesis();
		h.budgetType = Hypothesis.BudgetType.BAIXO;
		insert(h);
end

rule "r2"
	when
		Evidences(  600 < maxBudget < 1000 )
	then
		Hypothesis h = new Hypothesis();
        h.budgetType = Hypothesis.BudgetType.MEDIO_BAIXO;
        insert(h);
end

rule "r3"
	when
		Evidences(  1000 < maxBudget < 1500 )
	then
		Hypothesis h = new Hypothesis();
        h.budgetType = Hypothesis.BudgetType.MEDIO;
        insert(h);
end

rule "r4"
	when
		Evidences(  1500 < maxBudget < 2000 )
	then
		Hypothesis h = new Hypothesis();
        h.budgetType = Hypothesis.BudgetType.MEDIO_ALTO;
        insert(h);
end

rule "r5"
	when
		Evidences(  2000 < maxBudget )
	then
		Hypothesis h = new Hypothesis();
        h.budgetType = Hypothesis.BudgetType.ALTO;
        insert(h);
end

rule "r6"
	when
		$hypothesis : Hypothesis( budgetType == BudgetType.BAIXO)
	then
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    System.out.println("Escolha a finalidade: \n");
	    System.out.println("1. " + "Navegação WEB \n 2. Aplicações Office \n 3. Aplicações Profissionais");
        int semi_finality = Integer.parseInt(br.readLine());
        $hypothesis.semi_finality = Hypothesis.Semi_Finality.values()[semi_finality-1];
		update($hypothesis);
end

rule "r7"
	when
		$hypothesis : Hypothesis( budgetType != BudgetType.BAIXO)
	then
		 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
         System.out.println("Escolha a finalidade: \n");
         int i = 1;
         for ( Hypothesis.Semi_Finality fnlt: Hypothesis.Semi_Finality.values() ) {
            System.out.println( i + ". " + fnlt);
            i++;
         }

         Integer semi_finality = Integer.parseInt(br.readLine());
         $hypothesis.semi_finality = Hypothesis.Semi_Finality.values()[semi_finality-1];

          for (Hypothesis.Finality finality : Hypothesis.Finality.values()) {
                 if (finality.name().equals($hypothesis.semi_finality.toString().toUpperCase())) {
                     $hypothesis.finality = finality;
                 }
             }
         update($hypothesis);
end

rule "r8"
    when
        $hypothesis : Hypothesis(Semi_Finality == Semi_Finality.NAVEGACAO_WEB)
    then
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Pretende ter uma utilização com muitas ou poucas janelas?");
        System.out.println("1. Muitas janelas.");
        System.out.println("2. Poucas janelas.");
        Integer finality = Integer.parseInt(br.readLine());
        if (finality == 1) $hypothesis.finality = Hypothesis.Finality.NAVEGACAO_WEB_SIMPLES;
        else  if (finality == 2) $hypothesis.finality = Hypothesis.Finality.NAVEGACAO_WEB_COMPLEXO;
        update($hypothesis);
    end
rule "r8"
    when
        $hypothesis : Hypothesis(Semi_Finality == Semi_Finality.APLICACOES_OFFICE)
    then
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Pretende utilizar o Office de forma básica ou profissional estas apliacações?");
        System.out.println("1. Forma Básica.");
        System.out.println("2. Profissional.");
        Integer finality = Integer.parseInt(br.readLine());
        if (finality == 1) $hypothesis.finality = Hypothesis.Finality.APLICACOES_OFFICE_BASICO;
        else  if (finality == 2) $hypothesis.finality = Hypothesis.Finality.APLICACOES_OFFICE_PROFISSIONAL;
        update($hypothesis);
    end

rule "r9"
    when
        $hypothesis : Hypothesis(Semi_Finality == Semi_Finality.APLICACOES_PROFISSIONAIS)
    then
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Pretende realizar regularmente operações de pesquisa e modificação à base de dados?");
        System.out.println("1. Vou utilizar Base de Dados.");
        System.out.println("2. Não vou utilizar Base de Dados.");
        Integer finality = Integer.parseInt(br.readLine());
        if (finality == 1) $hypothesis.finality = Hypothesis.Finality.APLICACOES_PROFISSIONAIS_COM_BASE_DADOS;
        else  if (finality == 2) $hypothesis.finality = Hypothesis.Finality.APLICACOES_PROFISSIONAIS_SEM_BASE_DADOS;
        update($hypothesis);
    end

rule "r10"
    when
        $hypothesis : Hypothesis(Semi_Finality == Semi_Finality.PROGRAMAS_AVANÇADOS)
    then
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Que tipo de programas pretende utilizar?");
        System.out.println("1. Modelação 3D.");
        System.out.println("2. Design Gráfico.");
        System.out.println("3. Calculo Matemático.");
        Integer finality = Integer.parseInt(br.readLine());
        if (finality == 1) $hypothesis.finality = Hypothesis.Finality.PROGRAMAS_AVANÇADOS_MODELACAO_3D;
        else  if (finality == 2) $hypothesis.finality = Hypothesis.Finality.PROGRAMAS_AVANÇADOS_DESIGN_GRAFICO;
        else if (finality ==3) $hypothesis.finality = Hypothesis.Finality.PROGRAMAS_AVANÇADOS_CALCULO_MATEMATICO;
        update($hypothesis);
     end




















rule "r8"
	when
		$hypothesis : Hypothesis( finality == Hypothesis.Finality.NAVEGACAO_WEB_SIMPLES || finality == Hypothesis.Finality.NAVEGACAO_WEB_COMPLEXO ||
		 finality == Hypothesis.Finality.APLICACOES_OFFICE_BASICO || finality == Hypothesis.Finality.APLICACOES_OFFICE_PROFISSIONAL )
	then
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Quando tempo irá utilizar o computador por dia? \n");
        System.out.println("1. 2 a 4 horas \n");
        System.out.println("2. Mais de 4 horas \n");
        int choice = Integer.parseInt(br.readLine());
        $hypothesis.durationDayChoice = choice;
        update($hypothesis);

end

rule "r9"
	when
		$hypothesis : Hypothesis( finality != Hypothesis.Finality.NAVEGACAO_WEB_SIMPLES && finality != Hypothesis.Finality.NAVEGACAO_WEB_COMPLEXO &&
		 finality != Hypothesis.Finality.APLICACOES_OFFICE_BASICO && finality != Hypothesis.Finality.APLICACOES_OFFICE_PROFISSIONAL )
	then
		$hypothesis.durationDayChoice = 2;
        update($hypothesis);
end

rule "r10"
	when
		$hypothesis : Hypothesis (finality == Hypothesis.Finality.NAVEGACAO_WEB_SIMPLES || finality == Hypothesis.Finality.NAVEGACAO_WEB_COMPLEXO)
	then
	    Storage storage = new Storage();
	    storage.isSSD = true;
	    storage.capacityGB = "240";
        List<Storage> storageList = Questions.questionStorage(storage);
        if(storageList.size() == 2){
            $hypothesis.scndStorage = storageList.get(1);
        }
        $hypothesis.storage = storageList.get(0);
        update($hypothesis);
end

rule "r11"
	when
		$hypothesis : Hypothesis (finality == Hypothesis.Finality.APLICACOES_OFFICE_BASICO || finality == Hypothesis.Finality.APLICACOES_OFFICE_PROFISSIONAL)
	then
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Storage storage = new Storage();
        storage.isSSD = true;
        System.out.println("Que tipo de ficheiros irão ser mais utilizados? \n");
        System.out.println("1. Word/excel/PowerPoint \n");
        System.out.println("2. Imagens ");
        int choice = Integer.parseInt(br.readLine());
        if(choice ==1) storage.capacityGB = "240";
        else if (choice == 2) storage.capacityGB = "480";
        List<Storage> storageList = Questions.questionStorage(storage);
        if(storageList.size() == 2){
            $hypothesis.scndStorage = storageList.get(1);
        }
        $hypothesis.storage = storageList.get(0);
        update($hypothesis);
end

rule "r12"
	when
		$hypothesis : Hypothesis (finality == Hypothesis.Finality.APLICACOES_PROFISSIONAIS_COM_BASE_DADOS || finality == Hypothesis.Finality.APLICACOES_PROFISSIONAIS_SEM_BASE_DADOS)
	then
		Storage storage = new Storage();
        storage.isSSD = true;
        storage.capacityGB = "480";
        List<Storage> storageList = Questions.questionStorage(storage);
        if(storageList.size() == 2){
           $hypothesis.scndStorage = storageList.get(1);
        }
        $hypothesis.storage = storageList.get(0);
        update($hypothesis);
end

rule "r13"
	when
		$hypothesis : Hypothesis (finality == Hypothesis.Finality.NAVEGACAO_WEB_SIMPLES && )
	then
        System.out.println("O sistema sugeriu a quantidade de RAM mínima, aceita ou prefere aumentar?");
        System.out.println("RAM sugerida:" + ram);
        System.out.println("1. ");

        update($hypothesis);
end

rule "unknown"
	when
		not Conclusion()
	then
		Conclusion c = new Conclusion(Conclusion.UNKNOWN);
		insert(c);
end

